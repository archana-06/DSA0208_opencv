import cv2
import numpy as np

def remove_background_by_color(image_path, lower_bound, upper_bound):
    # Read the image
    image = cv2.imread(image_path)
    if image is None:
        print("Error: Could not load image.")
        return

    # Convert the image to HSV color space (better for color segmentation)
    hsv = cv2.cvtColor(image, cv2.COLOR_BGR2HSV)

    # Create a binary mask where the color range is within the bounds
    mask = cv2.inRange(hsv, np.array(lower_bound), np.array(upper_bound))

    # Invert mask to keep foreground and remove background
    mask_inv = cv2.bitwise_not(mask)

    # Apply mask to get the foreground
    result = cv2.bitwise_and(image, image, mask=mask_inv)

    # Show images
    cv2.imshow("Original Image", image)
    cv2.imshow("Mask (Background)", mask)
    cv2.imshow("Result (Foreground Only)", result)
    cv2.waitKey(0)
    cv2.destroyAllWindows()

# Example usage:
# Green screen background
lower_hsv = [36, 25, 25]    # Lower bound of green in HSV
upper_hsv = [86, 255, 255]  # Upper bound of green in HSV

img_path = input("Enter image path: ")
remove_background_by_color(img_path, lower_hsv, upper_hsv)
